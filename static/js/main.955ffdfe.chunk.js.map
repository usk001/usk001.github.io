{"version":3,"sources":["ImageModal.js","App.js","reportWebVitals.js","index.js"],"names":["ImageModal","_ref","src","alt","onClose","React","createElement","className","onClick","App","showMenu","setShowMenu","useState","menuOpen","setMenuOpen","isModalOpen","setIsModalOpen","videoRef","useRef","useEffect","timer","setTimeout","handleScroll","document","querySelectorAll","forEach","element","offset","window","pageYOffset","style","backgroundPositionY","concat","addEventListener","clearTimeout","removeEventListener","ref","autoPlay","loop","muted","playsInline","type","toggleMenu","href","id","openModal","cursor","maxWidth","height","closeModal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.955ffdfe.chunk.js","sourcesContent":["import React from 'react';\nimport './ImageModal.css';\n\nfunction ImageModal({ src, alt, onClose }) {\n    return (\n        <div className=\"modal-overlay\" onClick={onClose}>\n            <div className=\"modal-content\">\n                <img src={src} alt={alt} className=\"modal-image\" />\n            </div>\n        </div>\n    );\n}\n\nexport default ImageModal;","import React, { useState, useEffect, useRef } from 'react';\n// import PDFviewer from './PDFviewer'; //PDF\nimport ImageModal from './ImageModal'; // 追加: ImageModalコンポーネントをインポート\nimport './App.css';\n\nfunction App() {\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false); // 追加: モーダルの状態管理\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowMenu(true);\n    }, 5000); // 5 seconds\n\n    const handleScroll = () => {\n      const parallaxElements = document.querySelectorAll('.parallax');\n      parallaxElements.forEach(element => {\n        const offset = window.pageYOffset;\n        element.style.backgroundPositionY = `${offset * 0.5}px`;\n      });\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      clearTimeout(timer);\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <section className=\"video-section\">\n        <video\n          ref={videoRef}\n          className=\"background-video\"\n          autoPlay\n          loop\n          muted\n          playsInline\n        >\n          <source src=\"/top.mp4\" type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n        {showMenu && (\n          <nav className=\"hamburger-menu\">\n            <button className=\"hamburger-button\" onClick={toggleMenu}>☰</button>\n            {menuOpen && (\n              <div className=\"menu-items\">\n                <a href=\"#groom\">Groom</a>\n                <a href=\"#bride\">Bride</a>\n                <a href=\"#program\">Program</a>\n                <a href=\"#table-plan\">Table Plan</a>\n              </div>\n            )}\n          </nav>\n        )}\n      </section>\n      <section className=\"content-profile\">\n        <div id=\"groom\" className=\"profile parallax\">\n          <div className=\"content-box\">\n            <h2>Groom</h2>\n            <p>ここにGroomの内容を記載します。</p>\n          </div>\n        </div>\n        <div id=\"bride\" className=\"profile parallax\">\n          <div className=\"content-box\">\n            <h2>Bride</h2>\n            <p>ここにBrideの内容を記載します。</p>\n          </div>\n        </div>\n      </section>\n      {/* 追加: 当日のプログラムのセクション */}\n      <section className=\"content-program\">\n        <div id=\"program\" className=\"program parallax\">\n          <div className=\"content-box\">\n            <h2>Program</h2>\n            <div className=\"program-schedule\">\n              <div className=\"program-item\">\n                <div className=\"program-time\">16:30</div>\n                <div className=\"program-event\">挙式（人前式）</div>\n              </div>\n              <div className=\"program-item\">\n                <div className=\"program-time\">16:55</div>\n                <div className=\"program-event\">集合写真撮影@ガーデン</div>\n              </div>\n              <div className=\"program-item\">\n                <div className=\"program-time\">17:05</div>\n                <div className=\"program-event\">披露宴</div>\n              </div>\n              <div className=\"program-item\">\n                <div className=\"program-time\">20:00</div>\n                <div className=\"program-event\">お披楽喜</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"content-program\">\n        <div id=\"table-plan\" className=\"program parallax\">\n          <div className=\"content-box\">\n            <h2>Table Plan</h2>\n            {/* 追加: 席次表画像を表示し、クリックでモーダルを開く */}\n            <img\n              src=\"/TablePlan.jpg\"\n              alt=\"Table Plan\"\n              className=\"table-plan-image\"\n              onClick={openModal}\n              style={{ cursor: 'pointer', maxWidth: '100%', height: 'auto' }}\n            />\n          </div>\n        </div>\n        {/* <PDFviewer /> */}\n      </section>\n      {/* 追加: モーダルを表示 */}\n      {isModalOpen && (\n        <ImageModal\n          src=\"/TablePlan.jpg\"\n          alt=\"Table Plan\"\n          onClose={closeModal}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}